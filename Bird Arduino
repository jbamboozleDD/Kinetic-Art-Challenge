#include <Servo.h>

Servo LServo;
Servo RServo;

const byte RS = 5;  //right servo
const byte LS = 4;  //left servo
const byte ledPin = 6;
const byte buttonPin1 = 3; //button to turn on/off servos

int j;
int i;
int Lpos = 180;
int Rpos = 0;
int count;
int adj;

byte currentButtonState1;
byte previousButtonState1;   //these are used later to detect button push

unsigned long startMillis1;
unsigned long currentMillis;    //all millis stuff is to keep track of time

const unsigned long period1 = 425;    //time periods

byte prevMode;
byte mode = 0;    //these three are used to control which code is run

void setup() {
  LServo.attach(LS);
  RServo.attach(RS);
  pinMode(ledPin, OUTPUT);
  pinMode(buttonPin1, INPUT);
  
  digitalWrite(ledPin, LOW);
  LServo.write(180);
  RServo.write(0);
  startMillis1 = millis();
  Serial.begin(9600);
}

void loop(){
  currentMillis = millis();
  previousButtonState1 = currentButtonState1;
  currentButtonState1 = digitalRead(buttonPin1);
  prevMode = mode;
  if (currentButtonState1 == LOW && previousButtonState1 == HIGH)  //if button is pressed change mode
  {
    mode = (mode + 1)%2;
    adj = 1;
    count = 0;
  }

  switch(mode)
  {
    case 0:     //run blinking LED to let us know the program is running. Uses millis 1
      if(Lpos != 180 && Rpos != 0)      //returns wings to starting position
      {
        Lpos++;       
        Rpos--;
        delay(5);
      }
      LServo.write(Lpos);
      RServo.write(Rpos);
      if (currentMillis - startMillis1 >= period1)  //test whether the period has elapsed
      {
        digitalWrite(ledPin, !digitalRead(ledPin));  //if so, change the state of the LED
        startMillis1 = currentMillis;  //IMPORTANT to save the start time of the current LED state
      }
      break;
    case 1:
      digitalWrite(ledPin, HIGH);     //makes bird wings flap back and forth
      Lpos -= adj;
      Rpos += adj;
      LServo.write(Lpos);
      RServo.write(Rpos);
      delay(5);
      count++;
      if((count % 180) == 0)
        adj *= -1;

      break;
  }
}
